#
# Makefile fragment for the JOS kernel.
# This is NOT a complete makefile;
# you must run GNU make in the top-level directory
# where the GNUmakefile is located.
#
OBJDIRS += boot
GUESTDIRS += boot 

BOOT_OBJS := $(OBJDIR)/boot/boot.o $(OBJDIR)/boot/main.o

$(OBJDIR)/boot/%.o: boot/%.c
	@echo + cc -Os $<
	@mkdir -p $(@D)
	$(V)$(CC) -nostdinc $(BOOT_CFLAGS) -Os -c -o $@ $<

$(OBJDIR)/boot/%.o: boot/boot.S
	@echo + as $<
	@mkdir -p $(@D)
	@mkdir -p $(subst $(OBJDIR),$(GUESTDIR),$(@D))
	$(V)$(CC) -nostdinc $(BOOT_CFLAGS) -c -o $@ $<
	$(V)$(CC) -nostdinc $(BOOT_CFLAGS) -c boot/gboot.S -o $(GUESTDIR)/boot/boot.o 

$(GUESTDIR)/boot/boot.o: boot/gboot.S
	@echo + as $<
	@mkdir -p $(@D)
	$(V)$(CC) -nostdinc $(BOOT_CFLAGS) -c -o $@ $<

$(OBJDIR)/boot/boot: $(BOOT_OBJS)
	@echo + ld $(OBJDIR)/boot/boot
	$(V)$(LD) $(BOOT_LDFLAGS) -N -e start -Ttext 0x7c00 -o $@.out $^
	$(V)$(OBJDUMP) -S $@.out >$@.asm
	$(V)$(OBJCOPY) -S -O binary -j .text $@.out $@
	$(V)perl boot/sign.pl $(OBJDIR)/boot/boot
	@echo + ld $(GUESTDIR)/boot/boot
	$(V)$(LD) $(BOOT_LDFLAGS) -N -e gboot_start -Ttext 0x7000 -o $(subst $(OBJDIR),$(GUESTDIR),$@).out $(GUESTDIR)/boot/boot.o
	$(V)$(OBJDUMP) -S $(subst $(OBJDIR),$(GUESTDIR),$@).out >$(subst $(OBJDIR),$(GUESTDIR),$@).asm
	$(V)$(OBJCOPY) -S -O binary -j .text $(subst $(OBJDIR),$(GUESTDIR),$@).out $(subst $(OBJDIR),$(GUESTDIR),$@)
	$(V)perl boot/gsign.pl $(GUESTDIR)/boot/boot

$(GUESTDIR)/boot/boot: $(GUESTDIR)/boot/boot.o
	@echo + ld $(GUESTDIR)/boot/boot	
	$(V)$(LD) $(BOOT_LDFLAGS) -N -e gboot_start -Ttext 0x7000 -o $@.out $^
	$(V)$(OBJDUMP) -S $@.out >$@.asm
	$(V)$(OBJCOPY) -S -O binary -j .text $@.out $@
	$(V)perl boot/gsign.pl $(GUESTDIR)/boot/boot
